from math import floor

def insert_sort(A):
    n = len(A)
    for j in range(1, n):
        key = A[j]
        key_2 = A[j][2]
        key_roz = A[j][1] - A[j][0]
        i = j - 1
        roz = A[i][1] - A[i][0]
        while i >= 0 and A[i][2] > key_2 or (A[i][2] == key_2 and roz > key_roz):
            roz = A[i][1] - A[i][0]
            A[i+1] = A[i]
            i -= 1
        A[i+1] = key


def bucker_sort(A):
    n = len(A)
    B = [[] for _ in range(n)]
    for i in range(n):
        B[floor(n*A[i][2])].append(A[i])
    for i in range(n-1):
        if B[i]:
            insert_sort(B[i])
    j = 0
    for i in range(n):
        for elem in B[i]:
            A[j] = elem
            j += 1


if __name__ == '__main__':
    tab1 = [8, 2, 4, 5, 1, 2, 6, 12]
    # tablica do bucket sorta z jednostajnym rozk≈Çadem
    tab2 = [0.78, 0.17, 0.39, 0.26, 0.72, 0.94, 0.21, 0.12, 0.23, 0.68]
    tab3 = [6.1, 1.2, 1.5, 3.5, 4.5, 2.5, 3.9, 7.8]
    test = [(57, 100, 0.0196078431372549), (7, 94, 0.06862745098039216), (44, 73, 0.058823529411764705),
     (10, 39, 0.06862745098039216), (5, 56, 0.058823529411764705), (3, 78, 0.029411764705882353),
     (8, 65, 0.09803921568627451), (23, 86, 0.08823529411764706), (8, 53, 0.0196078431372549),
     (42, 43, 0.06862745098039216), (24, 73, 0.0196078431372549), (10, 59, 0.029411764705882353),
     (29, 32, 0.09803921568627451), (54, 59, 0.049019607843137254), (4, 9, 0.09803921568627451),
     (7, 86, 0.00980392156862745), (48, 85, 0.0196078431372549), (31, 42, 0.029411764705882353),
     (28, 77, 0.0392156862745098), (11, 82, 0.029411764705882353)]
    bucker_sort(test)
    print(test)
    # [(7, 86, 0.00980392156862745), (24, 73, 0.0196078431372549), (8, 53, 0.0196078431372549),
    # (57, 100, 0.0196078431372549), (48, 85, 0.0196078431372549), (10, 59, 0.029411764705882353),
    # (3, 78, 0.029411764705882353), (31, 42, 0.029411764705882353), (11, 82, 0.029411764705882353),
    # (28, 77, 0.0392156862745098), (54, 59, 0.049019607843137254), (5, 56, 0.058823529411764705),
    # (44, 73, 0.058823529411764705), (42, 43, 0.06862745098039216), (10, 39, 0.06862745098039216),
    # (7, 94, 0.06862745098039216), (23, 86, 0.08823529411764706), (4, 9, 0.09803921568627451),
    # (29, 32, 0.09803921568627451), (8, 65, 0.09803921568627451)]

    #[12, 40, 38, 35, 6, 32, 52, 58, 57, 53, 5, 9, 68, 62, 9, 75, 43, 50, 5, 54, 51, 45, 17, 46, 16, 12, 72, 12, 45, 21,
    # 62, 82, 32, 31, 7, 26, 54, 68, 84, 31, 56, 15, 30, 58, 72, 33, 43, 29, 84, 76, 19, 42, 22, 54, 31, 38, 69, 31, 53,
    # 43, 44, 31, 26, 55, 15, 42, 43, 32, 34, 59, 12, 42, 43, 56, 42, 60, 58, 5, 35, 32, 4, 57, 31, 36, 20, 17, 43, 78,
    # 56, 15, 55, 16, 70, 5, 35, 6, 31, 31, 8, 26]

    #[4, 5, 5, 5, 5, 6, 6, 7, 8, 9, 9, 12, 12, 12, 12, 15, 15, 15, 16, 16, 17, 17, 19, 20, 21, 22, 26, 26, 26, 29,
    # 30, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 33, 34, 35, 35, 35, 36, 38, 38, 40, 42, 42, 42, 42, 43,
    # 43, 43, 43, 43, 43, 44, 45, 45, 46, 50, 51, 52, 53, 53, 54, 54, 54, 55, 55, 56, 56, 56, 57, 57, 58, 58, 58,
    # 59, 60, 62, 62, 68, 68, 69, 70, 72, 72, 75, 76, 78, 82, 84, 84]

    test_res = [11.960951405577362, 39.98154238378629, 38.08903460949659, 35.23642993113026, 5.5641052974388,
                31.890407466795295, 52.12664378620684, 57.96659772982821, 56.98887743148953, 52.52541924873367,
                4.659371558576822, 8.876700441818684, 67.5561606688425, 62.38795432681218, 8.654032969847322,
                74.73860510857776, 42.949660264886916, 50.30428815027699, 5.0820042341947556, 54.109074644278735,
                51.47635902930051, 44.67557532945648, 16.705942353233695, 45.72748805722222, 15.932805270887911,
                12.41814783634618, 71.50206832960248, 11.60443536983803, 44.701866515912116, 20.99533121054992,
                62.21977755613625, 81.84079531254247, 31.674711930565536, 30.9788429136388, 6.714016325771809,
                25.53244440862909, 54.23834891151637, 68.24620117293671, 83.76173871941864, 31.400180703494698,
                55.68241061922163, 15.429355393629521, 30.17001372203231, 58.16315707145259, 72.18151139188558,
                32.73828394757584, 42.99623245187104, 29.20713874185458, 84.07559974398464, 75.50281412480399,
                19.377707809209824, 42.35993453999981, 21.586637924425304, 54.239714013878256, 31.25688093341887,
                37.91247274586931, 68.69057496543974, 31.083418009337038, 53.130452152341604, 42.68715512519702,
                43.58317397069186, 31.06380678107962, 26.162745183333755, 54.55649445718154, 14.957345359958708,
                42.34890898549929, 43.110388837754726, 31.966527957934886, 33.76101236511022, 59.48610421130434,
                12.361222924664617, 42.42830140097067, 42.82849820423871, 55.76972235785797, 42.39641113951802,
                59.71394189307466, 58.46436134260148, 4.901329836342484, 34.53436247073114, 31.541274587158114,
                4.274617341347039, 56.97896303003654, 30.770760640501976, 36.33516228245571, 19.706098129041493,
                17.28163997689262, 42.83743862621486, 77.96418437408283, 56.39292336720973, 15.414660120848566,
                55.00385343655944, 15.871598795522004, 70.26106900628656, 5.246355755720288, 34.8325696606189,
                6.185464629437774, 31.090803840197623, 31.298429816495627, 7.936326242983341, 26.17306627659127]